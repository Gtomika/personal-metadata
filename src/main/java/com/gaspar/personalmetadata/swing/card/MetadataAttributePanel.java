package com.gaspar.personalmetadata.swing.card;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import lombok.extern.slf4j.Slf4j;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;

@Slf4j
public class MetadataAttributePanel extends JPanel {

    private JPanel contentPane;
    private JTextField nameField;
    private JTextField valueField;
    private JButton deleteButton;

    private MetadataAttributePanel(String name, String value) {
        contentPane.setPreferredSize(new Dimension(480, 40));
        add(contentPane);
        nameField.setText(name);
        valueField.setText(value);
        deleteButton.addActionListener(this::handleDelete);
    }

    private void handleDelete(ActionEvent event) {
        log.info("User selected to remove metadata attribute '{}'", nameField.getText());
        Container parent = getParent();
        parent.remove(this);
        parent.revalidate();
        parent.repaint();
    }

    public boolean validState() {
        return !nameField.getText().isBlank(); //value field can be empty
    }

    public String attributeName() {
        return nameField.getText();
    }

    public String attributeValue() {
        return valueField.getText();
    }

    public static MetadataAttributePanel of(String name, String value) {
        return new MetadataAttributePanel(name, value);
    }

    public static MetadataAttributePanel ofEmptyValue(String name) {
        return new MetadataAttributePanel(name, null);
    }

    public static MetadataAttributePanel ofEmpty() {
        return new MetadataAttributePanel(null, null);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        valueField = new JTextField();
        valueField.setToolTipText("Attribute value, can be empty");
        contentPane.add(valueField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(300, -1), null, 0, false));
        deleteButton = new JButton();
        deleteButton.setForeground(new Color(-4521984));
        deleteButton.setText("Delete");
        deleteButton.setToolTipText("Delete only this attribute");
        contentPane.add(deleteButton, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        nameField = new JTextField();
        nameField.setToolTipText("Attribute name, cannot be empty");
        contentPane.add(nameField, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(100, -1), null, 0, false));
        final JSeparator separator1 = new JSeparator();
        contentPane.add(separator1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
